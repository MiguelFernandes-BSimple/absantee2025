// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AbsanteeContext))]
    [Migration("20250423112457_CHANGES")]
    partial class CHANGES
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.DataModel.AssociationProjectCollaboratorDataModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CollaboratorId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("Infrastructure.DataModel.CollaboratorDataModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Collaborators");
                });

            modelBuilder.Entity("Infrastructure.DataModel.HolidayPeriodDataModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("HolidayPlanDataModelId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HolidayPlanDataModelId");

                    b.ToTable("HolidayPeriod");
                });

            modelBuilder.Entity("Infrastructure.DataModel.HolidayPlanDataModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CollaboratorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("HolidayPlan");
                });

            modelBuilder.Entity("Infrastructure.DataModel.ProjectDataModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Infrastructure.DataModel.TrainingModuleCollaboratorDataModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CollaboratorId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrainingModuleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TrainingModuleCollaboratorDataModels");
                });

            modelBuilder.Entity("Infrastructure.DataModel.TrainingModuleDataModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("TrainingSubjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TrainingModules");
                });

            modelBuilder.Entity("Infrastructure.DataModel.TrainingSubjectDataModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TrainingSubjects");
                });

            modelBuilder.Entity("Infrastructure.DataModel.UserDataModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surnames")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Infrastructure.DataModel.AssociationProjectCollaboratorDataModel", b =>
                {
                    b.OwnsOne("Domain.Models.PeriodDate", "PeriodDate", b1 =>
                        {
                            b1.Property<long>("AssociationProjectCollaboratorDataModelId")
                                .HasColumnType("bigint");

                            b1.Property<DateOnly>("_finalDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("_initDate")
                                .HasColumnType("date");

                            b1.HasKey("AssociationProjectCollaboratorDataModelId");

                            b1.ToTable("Associations");

                            b1.WithOwner()
                                .HasForeignKey("AssociationProjectCollaboratorDataModelId");
                        });

                    b.Navigation("PeriodDate")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.DataModel.CollaboratorDataModel", b =>
                {
                    b.OwnsOne("Domain.Models.PeriodDateTime", "PeriodDateTime", b1 =>
                        {
                            b1.Property<long>("CollaboratorDataModelId")
                                .HasColumnType("bigint");

                            b1.Property<DateTime>("_finalDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("_initDate")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("CollaboratorDataModelId");

                            b1.ToTable("Collaborators");

                            b1.WithOwner()
                                .HasForeignKey("CollaboratorDataModelId");
                        });

                    b.Navigation("PeriodDateTime")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.DataModel.HolidayPeriodDataModel", b =>
                {
                    b.HasOne("Infrastructure.DataModel.HolidayPlanDataModel", null)
                        .WithMany("HolidayPeriodsDM")
                        .HasForeignKey("HolidayPlanDataModelId");

                    b.OwnsOne("Domain.Models.PeriodDate", "PeriodDate", b1 =>
                        {
                            b1.Property<long>("HolidayPeriodDataModelId")
                                .HasColumnType("bigint");

                            b1.Property<DateOnly>("_finalDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("_initDate")
                                .HasColumnType("date");

                            b1.HasKey("HolidayPeriodDataModelId");

                            b1.ToTable("HolidayPeriod");

                            b1.WithOwner()
                                .HasForeignKey("HolidayPeriodDataModelId");
                        });

                    b.Navigation("PeriodDate")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.DataModel.ProjectDataModel", b =>
                {
                    b.OwnsOne("Domain.Models.PeriodDate", "PeriodDate", b1 =>
                        {
                            b1.Property<long>("ProjectDataModelId")
                                .HasColumnType("bigint");

                            b1.Property<DateOnly>("_finalDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("_initDate")
                                .HasColumnType("date");

                            b1.HasKey("ProjectDataModelId");

                            b1.ToTable("Projects");

                            b1.WithOwner()
                                .HasForeignKey("ProjectDataModelId");
                        });

                    b.Navigation("PeriodDate")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.DataModel.TrainingModuleDataModel", b =>
                {
                    b.OwnsMany("Domain.Models.PeriodDateTime", "Periods", b1 =>
                        {
                            b1.Property<long>("TrainingModuleDataModelId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("_finalDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("_initDate")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("TrainingModuleDataModelId", "Id");

                            b1.ToTable("TrainingModules_Periods");

                            b1.WithOwner()
                                .HasForeignKey("TrainingModuleDataModelId");
                        });

                    b.Navigation("Periods");
                });

            modelBuilder.Entity("Infrastructure.DataModel.UserDataModel", b =>
                {
                    b.OwnsOne("Domain.Models.PeriodDateTime", "PeriodDateTime", b1 =>
                        {
                            b1.Property<long>("UserDataModelId")
                                .HasColumnType("bigint");

                            b1.Property<DateTime>("_finalDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("_initDate")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("UserDataModelId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserDataModelId");
                        });

                    b.Navigation("PeriodDateTime")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.DataModel.HolidayPlanDataModel", b =>
                {
                    b.Navigation("HolidayPeriodsDM");
                });
#pragma warning restore 612, 618
        }
    }
}
